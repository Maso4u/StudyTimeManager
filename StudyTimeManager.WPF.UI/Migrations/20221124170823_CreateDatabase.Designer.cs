// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudyTimeManager.Repository;

namespace StudyTimeManager.WPF.UI.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20221124170823_CreateDatabase")]
    partial class CreateDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StudyTimeManager.Domain.Models.Module", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ModuleId");

                    b.Property<int>("ClassHoursPerWeek")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NumberOfCredits")
                        .HasColumnType("int");

                    b.Property<int>("RequiredWeeklySelfStudyHours")
                        .HasColumnType("int");

                    b.Property<Guid>("SemesterId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SemesterId");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("StudyTimeManager.Domain.Models.ModuleSemesterWeek", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ModuleSemesterWeekId");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModuleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RemainingSelfStudyHours")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("WeekNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ModuleId");

                    b.ToTable("ModuleSemesterWeeks");
                });

            modelBuilder.Entity("StudyTimeManager.Domain.Models.Semester", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SemesterId");

                    b.Property<DateTime?>("EndDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int>("NumberOfWeeks")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Semesters");
                });

            modelBuilder.Entity("StudyTimeManager.Domain.Models.StudySession", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("StudySessionId");

                    b.Property<DateTime?>("Date")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int>("HoursSpent")
                        .HasColumnType("int");

                    b.Property<Guid>("ModuleSemesterWeekId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ModuleSemesterWeekId");

                    b.ToTable("StudySessions");
                });

            modelBuilder.Entity("StudyTimeManager.Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserId");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("42d2d708-e43f-4fb8-8f20-630b07c44f92"),
                            PasswordHash = "testing123",
                            Username = "tester"
                        });
                });

            modelBuilder.Entity("StudyTimeManager.Domain.Models.Module", b =>
                {
                    b.HasOne("StudyTimeManager.Domain.Models.Semester", "Semester")
                        .WithMany("Modules")
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("StudyTimeManager.Domain.Models.ModuleSemesterWeek", b =>
                {
                    b.HasOne("StudyTimeManager.Domain.Models.Module", "Module")
                        .WithMany("Weeks")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Module");
                });

            modelBuilder.Entity("StudyTimeManager.Domain.Models.Semester", b =>
                {
                    b.HasOne("StudyTimeManager.Domain.Models.User", "User")
                        .WithMany("Semesters")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("StudyTimeManager.Domain.Models.StudySession", b =>
                {
                    b.HasOne("StudyTimeManager.Domain.Models.ModuleSemesterWeek", "ModuleSemesterWeek")
                        .WithMany("StudySessions")
                        .HasForeignKey("ModuleSemesterWeekId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ModuleSemesterWeek");
                });

            modelBuilder.Entity("StudyTimeManager.Domain.Models.Module", b =>
                {
                    b.Navigation("Weeks");
                });

            modelBuilder.Entity("StudyTimeManager.Domain.Models.ModuleSemesterWeek", b =>
                {
                    b.Navigation("StudySessions");
                });

            modelBuilder.Entity("StudyTimeManager.Domain.Models.Semester", b =>
                {
                    b.Navigation("Modules");
                });

            modelBuilder.Entity("StudyTimeManager.Domain.Models.User", b =>
                {
                    b.Navigation("Semesters");
                });
#pragma warning restore 612, 618
        }
    }
}
